/* soapAlertWebServiceSoapBindingProxy.cpp
   Generated by gSOAP 2.8.71 for AlertWebService.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapAlertWebServiceSoapBindingProxy.h"

AlertWebServiceSoapBindingProxy::AlertWebServiceSoapBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	AlertWebServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AlertWebServiceSoapBindingProxy::AlertWebServiceSoapBindingProxy(const AlertWebServiceSoapBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

AlertWebServiceSoapBindingProxy::AlertWebServiceSoapBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	AlertWebServiceSoapBindingProxy_init(_soap->imode, _soap->omode);
}

AlertWebServiceSoapBindingProxy::AlertWebServiceSoapBindingProxy(struct soap *_soap, const char *endpoint)
{	this->soap = _soap;
	this->soap_own = false;
	AlertWebServiceSoapBindingProxy_init(_soap->imode, _soap->omode);
	soap_endpoint = endpoint;
}

AlertWebServiceSoapBindingProxy::AlertWebServiceSoapBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	AlertWebServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

AlertWebServiceSoapBindingProxy::AlertWebServiceSoapBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AlertWebServiceSoapBindingProxy_init(iomode, iomode);
}

AlertWebServiceSoapBindingProxy::AlertWebServiceSoapBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AlertWebServiceSoapBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

AlertWebServiceSoapBindingProxy::AlertWebServiceSoapBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	AlertWebServiceSoapBindingProxy_init(imode, omode);
}

AlertWebServiceSoapBindingProxy::~AlertWebServiceSoapBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void AlertWebServiceSoapBindingProxy::AlertWebServiceSoapBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
        {"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"ns1", "http://Alert.Concerto.com", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

AlertWebServiceSoapBindingProxy *AlertWebServiceSoapBindingProxy::copy()
{	AlertWebServiceSoapBindingProxy *dup = SOAP_NEW_UNMANAGED(AlertWebServiceSoapBindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

AlertWebServiceSoapBindingProxy& AlertWebServiceSoapBindingProxy::operator=(const AlertWebServiceSoapBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void AlertWebServiceSoapBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void AlertWebServiceSoapBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	AlertWebServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void AlertWebServiceSoapBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

::SOAP_ENV__Header *AlertWebServiceSoapBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *AlertWebServiceSoapBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *AlertWebServiceSoapBindingProxy::soap_fault_subcode()
{	return ::soap_fault_subcode(this->soap);
}

const char *AlertWebServiceSoapBindingProxy::soap_fault_string()
{	return ::soap_fault_string(this->soap);
}

const char *AlertWebServiceSoapBindingProxy::soap_fault_detail()
{	return ::soap_fault_detail(this->soap);
}

int AlertWebServiceSoapBindingProxy::soap_close_socket()
{	return ::soap_closesock(this->soap);
}

int AlertWebServiceSoapBindingProxy::soap_force_close_socket()
{	return ::soap_force_closesock(this->soap);
}

void AlertWebServiceSoapBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AlertWebServiceSoapBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *AlertWebServiceSoapBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int AlertWebServiceSoapBindingProxy::GetVersion(const char *endpoint, const char *soap_action, std::string &GetVersionReturn)
{
	struct ns1__GetVersion soap_tmp_ns1__GetVersion;
	struct ns1__GetVersionResponse *soap_tmp_ns1__GetVersionResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetVersion(soap, &soap_tmp_ns1__GetVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetVersion(soap, &soap_tmp_ns1__GetVersion, "ns1:GetVersion", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetVersion(soap, &soap_tmp_ns1__GetVersion, "ns1:GetVersion", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetVersionReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetVersionReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetVersionResponse = soap_get_ns1__GetVersionResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetVersionResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetVersionReturn = soap_tmp_ns1__GetVersionResponse->GetVersionReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::ClearSystemAlert(const char *endpoint, const char *soap_action, int _in0, struct ns1__ClearSystemAlertResponse &_param_1)
{
	struct ns1__ClearSystemAlert soap_tmp_ns1__ClearSystemAlert;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__ClearSystemAlert._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__ClearSystemAlert(soap, &soap_tmp_ns1__ClearSystemAlert);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__ClearSystemAlert(soap, &soap_tmp_ns1__ClearSystemAlert, "ns1:ClearSystemAlert", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__ClearSystemAlert(soap, &soap_tmp_ns1__ClearSystemAlert, "ns1:ClearSystemAlert", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__ClearSystemAlertResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__ClearSystemAlertResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__ClearSystemAlertResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::ClearApplicationAlert(const char *endpoint, const char *soap_action, int _in0, struct ns1__ClearApplicationAlertResponse &_param_1)
{
	struct ns1__ClearApplicationAlert soap_tmp_ns1__ClearApplicationAlert;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__ClearApplicationAlert._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__ClearApplicationAlert(soap, &soap_tmp_ns1__ClearApplicationAlert);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__ClearApplicationAlert(soap, &soap_tmp_ns1__ClearApplicationAlert, "ns1:ClearApplicationAlert", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__ClearApplicationAlert(soap, &soap_tmp_ns1__ClearApplicationAlert, "ns1:ClearApplicationAlert", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__ClearApplicationAlertResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__ClearApplicationAlertResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__ClearApplicationAlertResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetSiteRecord(const char *endpoint, const char *soap_action, std::string &GetSiteRecordReturn)
{
	struct ns1__GetSiteRecord soap_tmp_ns1__GetSiteRecord;
	struct ns1__GetSiteRecordResponse *soap_tmp_ns1__GetSiteRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetSiteRecord(soap, &soap_tmp_ns1__GetSiteRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetSiteRecord(soap, &soap_tmp_ns1__GetSiteRecord, "ns1:GetSiteRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetSiteRecord(soap, &soap_tmp_ns1__GetSiteRecord, "ns1:GetSiteRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetSiteRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetSiteRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetSiteRecordResponse = soap_get_ns1__GetSiteRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetSiteRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetSiteRecordReturn = soap_tmp_ns1__GetSiteRecordResponse->GetSiteRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetServerTypeRecord(const char *endpoint, const char *soap_action, std::string &GetServerTypeRecordReturn)
{
	struct ns1__GetServerTypeRecord soap_tmp_ns1__GetServerTypeRecord;
	struct ns1__GetServerTypeRecordResponse *soap_tmp_ns1__GetServerTypeRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetServerTypeRecord(soap, &soap_tmp_ns1__GetServerTypeRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetServerTypeRecord(soap, &soap_tmp_ns1__GetServerTypeRecord, "ns1:GetServerTypeRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetServerTypeRecord(soap, &soap_tmp_ns1__GetServerTypeRecord, "ns1:GetServerTypeRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetServerTypeRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetServerTypeRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetServerTypeRecordResponse = soap_get_ns1__GetServerTypeRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetServerTypeRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetServerTypeRecordReturn = soap_tmp_ns1__GetServerTypeRecordResponse->GetServerTypeRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetServerRecord(const char *endpoint, const char *soap_action, std::string &GetServerRecordReturn)
{
	struct ns1__GetServerRecord soap_tmp_ns1__GetServerRecord;
	struct ns1__GetServerRecordResponse *soap_tmp_ns1__GetServerRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetServerRecord(soap, &soap_tmp_ns1__GetServerRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetServerRecord(soap, &soap_tmp_ns1__GetServerRecord, "ns1:GetServerRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetServerRecord(soap, &soap_tmp_ns1__GetServerRecord, "ns1:GetServerRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetServerRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetServerRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetServerRecordResponse = soap_get_ns1__GetServerRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetServerRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetServerRecordReturn = soap_tmp_ns1__GetServerRecordResponse->GetServerRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpSystemAlertStatesRecord(const char *endpoint, const char *soap_action, std::string &GetTlkpSystemAlertStatesRecordReturn)
{
	struct ns1__GetTlkpSystemAlertStatesRecord soap_tmp_ns1__GetTlkpSystemAlertStatesRecord;
	struct ns1__GetTlkpSystemAlertStatesRecordResponse *soap_tmp_ns1__GetTlkpSystemAlertStatesRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpSystemAlertStatesRecord(soap, &soap_tmp_ns1__GetTlkpSystemAlertStatesRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpSystemAlertStatesRecord(soap, &soap_tmp_ns1__GetTlkpSystemAlertStatesRecord, "ns1:GetTlkpSystemAlertStatesRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpSystemAlertStatesRecord(soap, &soap_tmp_ns1__GetTlkpSystemAlertStatesRecord, "ns1:GetTlkpSystemAlertStatesRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetTlkpSystemAlertStatesRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetTlkpSystemAlertStatesRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpSystemAlertStatesRecordResponse = soap_get_ns1__GetTlkpSystemAlertStatesRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpSystemAlertStatesRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetTlkpSystemAlertStatesRecordReturn = soap_tmp_ns1__GetTlkpSystemAlertStatesRecordResponse->GetTlkpSystemAlertStatesRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpSystemAlertActionsRecord(const char *endpoint, const char *soap_action, std::string &GetTlkpSystemAlertActionsRecordReturn)
{
	struct ns1__GetTlkpSystemAlertActionsRecord soap_tmp_ns1__GetTlkpSystemAlertActionsRecord;
	struct ns1__GetTlkpSystemAlertActionsRecordResponse *soap_tmp_ns1__GetTlkpSystemAlertActionsRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpSystemAlertActionsRecord(soap, &soap_tmp_ns1__GetTlkpSystemAlertActionsRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpSystemAlertActionsRecord(soap, &soap_tmp_ns1__GetTlkpSystemAlertActionsRecord, "ns1:GetTlkpSystemAlertActionsRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpSystemAlertActionsRecord(soap, &soap_tmp_ns1__GetTlkpSystemAlertActionsRecord, "ns1:GetTlkpSystemAlertActionsRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetTlkpSystemAlertActionsRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetTlkpSystemAlertActionsRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpSystemAlertActionsRecordResponse = soap_get_ns1__GetTlkpSystemAlertActionsRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpSystemAlertActionsRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetTlkpSystemAlertActionsRecordReturn = soap_tmp_ns1__GetTlkpSystemAlertActionsRecordResponse->GetTlkpSystemAlertActionsRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpSystemAlertTypesRecord(const char *endpoint, const char *soap_action, std::string &GetTlkpSystemAlertTypesRecordReturn)
{
	struct ns1__GetTlkpSystemAlertTypesRecord soap_tmp_ns1__GetTlkpSystemAlertTypesRecord;
	struct ns1__GetTlkpSystemAlertTypesRecordResponse *soap_tmp_ns1__GetTlkpSystemAlertTypesRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpSystemAlertTypesRecord(soap, &soap_tmp_ns1__GetTlkpSystemAlertTypesRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpSystemAlertTypesRecord(soap, &soap_tmp_ns1__GetTlkpSystemAlertTypesRecord, "ns1:GetTlkpSystemAlertTypesRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpSystemAlertTypesRecord(soap, &soap_tmp_ns1__GetTlkpSystemAlertTypesRecord, "ns1:GetTlkpSystemAlertTypesRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetTlkpSystemAlertTypesRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetTlkpSystemAlertTypesRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpSystemAlertTypesRecordResponse = soap_get_ns1__GetTlkpSystemAlertTypesRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpSystemAlertTypesRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetTlkpSystemAlertTypesRecordReturn = soap_tmp_ns1__GetTlkpSystemAlertTypesRecordResponse->GetTlkpSystemAlertTypesRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetApplicationAlertsByStartDate(const char *endpoint, const char *soap_action, const std::string& _in0, const std::string& _in1, int _in2, std::string &_GetApplicationAlertsByStartDateReturn)
{
	struct ns1__GetApplicationAlertsByStartDate soap_tmp_ns1__GetApplicationAlertsByStartDate;
	struct ns1__GetApplicationAlertsByStartDateResponse *soap_tmp_ns1__GetApplicationAlertsByStartDateResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetApplicationAlertsByStartDate._in0 = _in0;
	soap_tmp_ns1__GetApplicationAlertsByStartDate._in1 = _in1;
	soap_tmp_ns1__GetApplicationAlertsByStartDate._in2 = _in2;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetApplicationAlertsByStartDate(soap, &soap_tmp_ns1__GetApplicationAlertsByStartDate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetApplicationAlertsByStartDate(soap, &soap_tmp_ns1__GetApplicationAlertsByStartDate, "ns1:GetApplicationAlertsByStartDate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetApplicationAlertsByStartDate(soap, &soap_tmp_ns1__GetApplicationAlertsByStartDate, "ns1:GetApplicationAlertsByStartDate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetApplicationAlertsByStartDateReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetApplicationAlertsByStartDateReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetApplicationAlertsByStartDateResponse = soap_get_ns1__GetApplicationAlertsByStartDateResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetApplicationAlertsByStartDateResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetApplicationAlertsByStartDateReturn = soap_tmp_ns1__GetApplicationAlertsByStartDateResponse->_GetApplicationAlertsByStartDateReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetApplicationAlerts(const char *endpoint, const char *soap_action, const std::string& _in0, int _in1, std::string &_GetApplicationAlertsReturn)
{
	struct ns1__GetApplicationAlerts soap_tmp_ns1__GetApplicationAlerts;
	struct ns1__GetApplicationAlertsResponse *soap_tmp_ns1__GetApplicationAlertsResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetApplicationAlerts._in0 = _in0;
	soap_tmp_ns1__GetApplicationAlerts._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetApplicationAlerts(soap, &soap_tmp_ns1__GetApplicationAlerts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetApplicationAlerts(soap, &soap_tmp_ns1__GetApplicationAlerts, "ns1:GetApplicationAlerts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetApplicationAlerts(soap, &soap_tmp_ns1__GetApplicationAlerts, "ns1:GetApplicationAlerts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetApplicationAlertsReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetApplicationAlertsReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetApplicationAlertsResponse = soap_get_ns1__GetApplicationAlertsResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetApplicationAlertsResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetApplicationAlertsReturn = soap_tmp_ns1__GetApplicationAlertsResponse->_GetApplicationAlertsReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetApplicationAlertsFilter(const char *endpoint, const char *soap_action, const std::string& _in0, const std::string& _in1, const std::string& _in2, int _in3, int _in4, std::string &_GetApplicationAlertsFilterReturn)
{
	struct ns1__GetApplicationAlertsFilter soap_tmp_ns1__GetApplicationAlertsFilter;
	struct ns1__GetApplicationAlertsFilterResponse *soap_tmp_ns1__GetApplicationAlertsFilterResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetApplicationAlertsFilter._in0 = _in0;
	soap_tmp_ns1__GetApplicationAlertsFilter._in1 = _in1;
	soap_tmp_ns1__GetApplicationAlertsFilter._in2 = _in2;
	soap_tmp_ns1__GetApplicationAlertsFilter._in3 = _in3;
	soap_tmp_ns1__GetApplicationAlertsFilter._in4 = _in4;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetApplicationAlertsFilter(soap, &soap_tmp_ns1__GetApplicationAlertsFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetApplicationAlertsFilter(soap, &soap_tmp_ns1__GetApplicationAlertsFilter, "ns1:GetApplicationAlertsFilter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetApplicationAlertsFilter(soap, &soap_tmp_ns1__GetApplicationAlertsFilter, "ns1:GetApplicationAlertsFilter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetApplicationAlertsFilterReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetApplicationAlertsFilterReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetApplicationAlertsFilterResponse = soap_get_ns1__GetApplicationAlertsFilterResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetApplicationAlertsFilterResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetApplicationAlertsFilterReturn = soap_tmp_ns1__GetApplicationAlertsFilterResponse->_GetApplicationAlertsFilterReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetSystemAlertsFilter(const char *endpoint, const char *soap_action, const std::string& _in0, const std::string& _in1, int _in2, int _in3, std::string &_GetSystemAlertsFilterReturn)
{
	struct ns1__GetSystemAlertsFilter soap_tmp_ns1__GetSystemAlertsFilter;
	struct ns1__GetSystemAlertsFilterResponse *soap_tmp_ns1__GetSystemAlertsFilterResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetSystemAlertsFilter._in0 = _in0;
	soap_tmp_ns1__GetSystemAlertsFilter._in1 = _in1;
	soap_tmp_ns1__GetSystemAlertsFilter._in2 = _in2;
	soap_tmp_ns1__GetSystemAlertsFilter._in3 = _in3;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetSystemAlertsFilter(soap, &soap_tmp_ns1__GetSystemAlertsFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetSystemAlertsFilter(soap, &soap_tmp_ns1__GetSystemAlertsFilter, "ns1:GetSystemAlertsFilter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetSystemAlertsFilter(soap, &soap_tmp_ns1__GetSystemAlertsFilter, "ns1:GetSystemAlertsFilter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetSystemAlertsFilterReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetSystemAlertsFilterReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetSystemAlertsFilterResponse = soap_get_ns1__GetSystemAlertsFilterResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetSystemAlertsFilterResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetSystemAlertsFilterReturn = soap_tmp_ns1__GetSystemAlertsFilterResponse->_GetSystemAlertsFilterReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetSystemAlertsByStartDate(const char *endpoint, const char *soap_action, const std::string& _in0, int _in1, std::string &_GetSystemAlertsByStartDateReturn)
{
	struct ns1__GetSystemAlertsByStartDate soap_tmp_ns1__GetSystemAlertsByStartDate;
	struct ns1__GetSystemAlertsByStartDateResponse *soap_tmp_ns1__GetSystemAlertsByStartDateResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetSystemAlertsByStartDate._in0 = _in0;
	soap_tmp_ns1__GetSystemAlertsByStartDate._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetSystemAlertsByStartDate(soap, &soap_tmp_ns1__GetSystemAlertsByStartDate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetSystemAlertsByStartDate(soap, &soap_tmp_ns1__GetSystemAlertsByStartDate, "ns1:GetSystemAlertsByStartDate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetSystemAlertsByStartDate(soap, &soap_tmp_ns1__GetSystemAlertsByStartDate, "ns1:GetSystemAlertsByStartDate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetSystemAlertsByStartDateReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetSystemAlertsByStartDateReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetSystemAlertsByStartDateResponse = soap_get_ns1__GetSystemAlertsByStartDateResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetSystemAlertsByStartDateResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetSystemAlertsByStartDateReturn = soap_tmp_ns1__GetSystemAlertsByStartDateResponse->_GetSystemAlertsByStartDateReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetSystemAlerts(const char *endpoint, const char *soap_action, int _in0, std::string &_GetSystemAlertsReturn)
{
	struct ns1__GetSystemAlerts soap_tmp_ns1__GetSystemAlerts;
	struct ns1__GetSystemAlertsResponse *soap_tmp_ns1__GetSystemAlertsResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetSystemAlerts._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetSystemAlerts(soap, &soap_tmp_ns1__GetSystemAlerts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetSystemAlerts(soap, &soap_tmp_ns1__GetSystemAlerts, "ns1:GetSystemAlerts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetSystemAlerts(soap, &soap_tmp_ns1__GetSystemAlerts, "ns1:GetSystemAlerts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetSystemAlertsReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetSystemAlertsReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetSystemAlertsResponse = soap_get_ns1__GetSystemAlertsResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetSystemAlertsResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetSystemAlertsReturn = soap_tmp_ns1__GetSystemAlertsResponse->_GetSystemAlertsReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::AcknowledgeApplicationAlert(const char *endpoint, const char *soap_action, int _in0, const std::string& _in1, struct ns1__AcknowledgeApplicationAlertResponse &_param_1)
{
	struct ns1__AcknowledgeApplicationAlert soap_tmp_ns1__AcknowledgeApplicationAlert;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__AcknowledgeApplicationAlert._in0 = _in0;
	soap_tmp_ns1__AcknowledgeApplicationAlert._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__AcknowledgeApplicationAlert(soap, &soap_tmp_ns1__AcknowledgeApplicationAlert);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__AcknowledgeApplicationAlert(soap, &soap_tmp_ns1__AcknowledgeApplicationAlert, "ns1:AcknowledgeApplicationAlert", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__AcknowledgeApplicationAlert(soap, &soap_tmp_ns1__AcknowledgeApplicationAlert, "ns1:AcknowledgeApplicationAlert", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__AcknowledgeApplicationAlertResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__AcknowledgeApplicationAlertResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__AcknowledgeApplicationAlertResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::AcknowledgeSystemAlert(const char *endpoint, const char *soap_action, int _in0, const std::string& _in1, struct ns1__AcknowledgeSystemAlertResponse &_param_1)
{
	struct ns1__AcknowledgeSystemAlert soap_tmp_ns1__AcknowledgeSystemAlert;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__AcknowledgeSystemAlert._in0 = _in0;
	soap_tmp_ns1__AcknowledgeSystemAlert._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__AcknowledgeSystemAlert(soap, &soap_tmp_ns1__AcknowledgeSystemAlert);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__AcknowledgeSystemAlert(soap, &soap_tmp_ns1__AcknowledgeSystemAlert, "ns1:AcknowledgeSystemAlert", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__AcknowledgeSystemAlert(soap, &soap_tmp_ns1__AcknowledgeSystemAlert, "ns1:AcknowledgeSystemAlert", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__AcknowledgeSystemAlertResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__AcknowledgeSystemAlertResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__AcknowledgeSystemAlertResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::DeleteAlertActionField2(const char *endpoint, const char *soap_action, int _in0, int _in1, struct ns1__DeleteAlertActionField2Response &_param_1)
{
	struct ns1__DeleteAlertActionField2 soap_tmp_ns1__DeleteAlertActionField2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__DeleteAlertActionField2._in0 = _in0;
	soap_tmp_ns1__DeleteAlertActionField2._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DeleteAlertActionField2(soap, &soap_tmp_ns1__DeleteAlertActionField2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DeleteAlertActionField2(soap, &soap_tmp_ns1__DeleteAlertActionField2, "ns1:DeleteAlertActionField2", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DeleteAlertActionField2(soap, &soap_tmp_ns1__DeleteAlertActionField2, "ns1:DeleteAlertActionField2", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__DeleteAlertActionField2Response*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__DeleteAlertActionField2Response(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__DeleteAlertActionField2Response(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::DeleteAlertActionField(const char *endpoint, const char *soap_action, int _in0, struct ns1__DeleteAlertActionFieldResponse &_param_1)
{
	struct ns1__DeleteAlertActionField soap_tmp_ns1__DeleteAlertActionField;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__DeleteAlertActionField._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DeleteAlertActionField(soap, &soap_tmp_ns1__DeleteAlertActionField);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DeleteAlertActionField(soap, &soap_tmp_ns1__DeleteAlertActionField, "ns1:DeleteAlertActionField", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DeleteAlertActionField(soap, &soap_tmp_ns1__DeleteAlertActionField, "ns1:DeleteAlertActionField", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__DeleteAlertActionFieldResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__DeleteAlertActionFieldResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__DeleteAlertActionFieldResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::DeleteAlertActionParameter2(const char *endpoint, const char *soap_action, int _in0, int _in1, struct ns1__DeleteAlertActionParameter2Response &_param_1)
{
	struct ns1__DeleteAlertActionParameter2 soap_tmp_ns1__DeleteAlertActionParameter2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__DeleteAlertActionParameter2._in0 = _in0;
	soap_tmp_ns1__DeleteAlertActionParameter2._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DeleteAlertActionParameter2(soap, &soap_tmp_ns1__DeleteAlertActionParameter2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DeleteAlertActionParameter2(soap, &soap_tmp_ns1__DeleteAlertActionParameter2, "ns1:DeleteAlertActionParameter2", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DeleteAlertActionParameter2(soap, &soap_tmp_ns1__DeleteAlertActionParameter2, "ns1:DeleteAlertActionParameter2", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__DeleteAlertActionParameter2Response*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__DeleteAlertActionParameter2Response(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__DeleteAlertActionParameter2Response(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::DeleteAlertActionParameter(const char *endpoint, const char *soap_action, int _in0, struct ns1__DeleteAlertActionParameterResponse &_param_1)
{
	struct ns1__DeleteAlertActionParameter soap_tmp_ns1__DeleteAlertActionParameter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__DeleteAlertActionParameter._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DeleteAlertActionParameter(soap, &soap_tmp_ns1__DeleteAlertActionParameter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DeleteAlertActionParameter(soap, &soap_tmp_ns1__DeleteAlertActionParameter, "ns1:DeleteAlertActionParameter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DeleteAlertActionParameter(soap, &soap_tmp_ns1__DeleteAlertActionParameter, "ns1:DeleteAlertActionParameter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__DeleteAlertActionParameterResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__DeleteAlertActionParameterResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__DeleteAlertActionParameterResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::DeleteAlertScheduleByScheduleId(const char *endpoint, const char *soap_action, int _in0, struct ns1__DeleteAlertScheduleByScheduleIdResponse &_param_1)
{
	struct ns1__DeleteAlertScheduleByScheduleId soap_tmp_ns1__DeleteAlertScheduleByScheduleId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__DeleteAlertScheduleByScheduleId._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DeleteAlertScheduleByScheduleId(soap, &soap_tmp_ns1__DeleteAlertScheduleByScheduleId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DeleteAlertScheduleByScheduleId(soap, &soap_tmp_ns1__DeleteAlertScheduleByScheduleId, "ns1:DeleteAlertScheduleByScheduleId", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DeleteAlertScheduleByScheduleId(soap, &soap_tmp_ns1__DeleteAlertScheduleByScheduleId, "ns1:DeleteAlertScheduleByScheduleId", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__DeleteAlertScheduleByScheduleIdResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__DeleteAlertScheduleByScheduleIdResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__DeleteAlertScheduleByScheduleIdResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::DeleteAlertSchedule(const char *endpoint, const char *soap_action, int _in0, struct ns1__DeleteAlertScheduleResponse &_param_1)
{
	struct ns1__DeleteAlertSchedule soap_tmp_ns1__DeleteAlertSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__DeleteAlertSchedule._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DeleteAlertSchedule(soap, &soap_tmp_ns1__DeleteAlertSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DeleteAlertSchedule(soap, &soap_tmp_ns1__DeleteAlertSchedule, "ns1:DeleteAlertSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DeleteAlertSchedule(soap, &soap_tmp_ns1__DeleteAlertSchedule, "ns1:DeleteAlertSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__DeleteAlertScheduleResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__DeleteAlertScheduleResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__DeleteAlertScheduleResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::DeleteAlertAction2(const char *endpoint, const char *soap_action, int _in0, struct ns1__DeleteAlertAction2Response &_param_1)
{
	struct ns1__DeleteAlertAction2 soap_tmp_ns1__DeleteAlertAction2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__DeleteAlertAction2._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DeleteAlertAction2(soap, &soap_tmp_ns1__DeleteAlertAction2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DeleteAlertAction2(soap, &soap_tmp_ns1__DeleteAlertAction2, "ns1:DeleteAlertAction2", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DeleteAlertAction2(soap, &soap_tmp_ns1__DeleteAlertAction2, "ns1:DeleteAlertAction2", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__DeleteAlertAction2Response*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__DeleteAlertAction2Response(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__DeleteAlertAction2Response(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::DeleteAlertAction(const char *endpoint, const char *soap_action, int _in0, struct ns1__DeleteAlertActionResponse &_param_1)
{
	struct ns1__DeleteAlertAction soap_tmp_ns1__DeleteAlertAction;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__DeleteAlertAction._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DeleteAlertAction(soap, &soap_tmp_ns1__DeleteAlertAction);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DeleteAlertAction(soap, &soap_tmp_ns1__DeleteAlertAction, "ns1:DeleteAlertAction", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DeleteAlertAction(soap, &soap_tmp_ns1__DeleteAlertAction, "ns1:DeleteAlertAction", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__DeleteAlertActionResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__DeleteAlertActionResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__DeleteAlertActionResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::DeleteAlertEvaluation2(const char *endpoint, const char *soap_action, int _in0, int _in1, struct ns1__DeleteAlertEvaluation2Response &_param_1)
{
	struct ns1__DeleteAlertEvaluation2 soap_tmp_ns1__DeleteAlertEvaluation2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__DeleteAlertEvaluation2._in0 = _in0;
	soap_tmp_ns1__DeleteAlertEvaluation2._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DeleteAlertEvaluation2(soap, &soap_tmp_ns1__DeleteAlertEvaluation2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DeleteAlertEvaluation2(soap, &soap_tmp_ns1__DeleteAlertEvaluation2, "ns1:DeleteAlertEvaluation2", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DeleteAlertEvaluation2(soap, &soap_tmp_ns1__DeleteAlertEvaluation2, "ns1:DeleteAlertEvaluation2", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__DeleteAlertEvaluation2Response*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__DeleteAlertEvaluation2Response(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__DeleteAlertEvaluation2Response(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::DeleteAlertEvaluation(const char *endpoint, const char *soap_action, int _in0, struct ns1__DeleteAlertEvaluationResponse &_param_1)
{
	struct ns1__DeleteAlertEvaluation soap_tmp_ns1__DeleteAlertEvaluation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__DeleteAlertEvaluation._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DeleteAlertEvaluation(soap, &soap_tmp_ns1__DeleteAlertEvaluation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DeleteAlertEvaluation(soap, &soap_tmp_ns1__DeleteAlertEvaluation, "ns1:DeleteAlertEvaluation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DeleteAlertEvaluation(soap, &soap_tmp_ns1__DeleteAlertEvaluation, "ns1:DeleteAlertEvaluation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__DeleteAlertEvaluationResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__DeleteAlertEvaluationResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__DeleteAlertEvaluationResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::DeleteAlert(const char *endpoint, const char *soap_action, int _in0, struct ns1__DeleteAlertResponse &_param_1)
{
	struct ns1__DeleteAlert soap_tmp_ns1__DeleteAlert;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__DeleteAlert._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__DeleteAlert(soap, &soap_tmp_ns1__DeleteAlert);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__DeleteAlert(soap, &soap_tmp_ns1__DeleteAlert, "ns1:DeleteAlert", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__DeleteAlert(soap, &soap_tmp_ns1__DeleteAlert, "ns1:DeleteAlert", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__DeleteAlertResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__DeleteAlertResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__DeleteAlertResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetRunningCenterCord(const char *endpoint, const char *soap_action, struct ns1__GetRunningCenterCordResponse &_param_1)
{
	struct ns1__GetRunningCenterCord soap_tmp_ns1__GetRunningCenterCord;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetRunningCenterCord(soap, &soap_tmp_ns1__GetRunningCenterCord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetRunningCenterCord(soap, &soap_tmp_ns1__GetRunningCenterCord, "ns1:GetRunningCenterCord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetRunningCenterCord(soap, &soap_tmp_ns1__GetRunningCenterCord, "ns1:GetRunningCenterCord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__GetRunningCenterCordResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__GetRunningCenterCordResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__GetRunningCenterCordResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::SetClientType(const char *endpoint, const char *soap_action, int _in0, struct ns1__SetClientTypeResponse &_param_1)
{
	struct ns1__SetClientType soap_tmp_ns1__SetClientType;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__SetClientType._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__SetClientType(soap, &soap_tmp_ns1__SetClientType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__SetClientType(soap, &soap_tmp_ns1__SetClientType, "ns1:SetClientType", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__SetClientType(soap, &soap_tmp_ns1__SetClientType, "ns1:SetClientType", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__SetClientTypeResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__SetClientTypeResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__SetClientTypeResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::SendServerUpdateNotification(const char *endpoint, const char *soap_action, const std::string& _in0, struct ns1__SendServerUpdateNotificationResponse &_param_1)
{
	struct ns1__SendServerUpdateNotification soap_tmp_ns1__SendServerUpdateNotification;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__SendServerUpdateNotification._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__SendServerUpdateNotification(soap, &soap_tmp_ns1__SendServerUpdateNotification);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__SendServerUpdateNotification(soap, &soap_tmp_ns1__SendServerUpdateNotification, "ns1:SendServerUpdateNotification", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__SendServerUpdateNotification(soap, &soap_tmp_ns1__SendServerUpdateNotification, "ns1:SendServerUpdateNotification", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__SendServerUpdateNotificationResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__SendServerUpdateNotificationResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__SendServerUpdateNotificationResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::UnSubscribeToDocumentType(const char *endpoint, const char *soap_action, int _in0, struct ns1__UnSubscribeToDocumentTypeResponse &_param_1)
{
	struct ns1__UnSubscribeToDocumentType soap_tmp_ns1__UnSubscribeToDocumentType;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__UnSubscribeToDocumentType._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__UnSubscribeToDocumentType(soap, &soap_tmp_ns1__UnSubscribeToDocumentType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__UnSubscribeToDocumentType(soap, &soap_tmp_ns1__UnSubscribeToDocumentType, "ns1:UnSubscribeToDocumentType", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__UnSubscribeToDocumentType(soap, &soap_tmp_ns1__UnSubscribeToDocumentType, "ns1:UnSubscribeToDocumentType", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__UnSubscribeToDocumentTypeResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__UnSubscribeToDocumentTypeResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__UnSubscribeToDocumentTypeResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::SubscribeToDocumentType(const char *endpoint, const char *soap_action, int _in0, struct ns1__SubscribeToDocumentTypeResponse &_param_1)
{
	struct ns1__SubscribeToDocumentType soap_tmp_ns1__SubscribeToDocumentType;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__SubscribeToDocumentType._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__SubscribeToDocumentType(soap, &soap_tmp_ns1__SubscribeToDocumentType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__SubscribeToDocumentType(soap, &soap_tmp_ns1__SubscribeToDocumentType, "ns1:SubscribeToDocumentType", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__SubscribeToDocumentType(soap, &soap_tmp_ns1__SubscribeToDocumentType, "ns1:SubscribeToDocumentType", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__SubscribeToDocumentTypeResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__SubscribeToDocumentTypeResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__SubscribeToDocumentTypeResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::SendNetworkDocument(const char *endpoint, const char *soap_action, const std::string& _in0, struct ns1__SendNetworkDocumentResponse &_param_1)
{
	struct ns1__SendNetworkDocument soap_tmp_ns1__SendNetworkDocument;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__SendNetworkDocument._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__SendNetworkDocument(soap, &soap_tmp_ns1__SendNetworkDocument);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__SendNetworkDocument(soap, &soap_tmp_ns1__SendNetworkDocument, "ns1:SendNetworkDocument", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__SendNetworkDocument(soap, &soap_tmp_ns1__SendNetworkDocument, "ns1:SendNetworkDocument", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__SendNetworkDocumentResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__SendNetworkDocumentResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__SendNetworkDocumentResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::SendAlert(const char *endpoint, const char *soap_action, int _in0, int _in1, int _in2, int _in3, int _in4, int _in5, const std::string& _in6, struct ns1__SendAlertResponse &_param_1)
{
	struct ns1__SendAlert soap_tmp_ns1__SendAlert;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__SendAlert._in0 = _in0;
	soap_tmp_ns1__SendAlert._in1 = _in1;
	soap_tmp_ns1__SendAlert._in2 = _in2;
	soap_tmp_ns1__SendAlert._in3 = _in3;
	soap_tmp_ns1__SendAlert._in4 = _in4;
	soap_tmp_ns1__SendAlert._in5 = _in5;
	soap_tmp_ns1__SendAlert._in6 = _in6;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__SendAlert(soap, &soap_tmp_ns1__SendAlert);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__SendAlert(soap, &soap_tmp_ns1__SendAlert, "ns1:SendAlert", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__SendAlert(soap, &soap_tmp_ns1__SendAlert, "ns1:SendAlert", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__SendAlertResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__SendAlertResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__SendAlertResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpActionParametersRecordByParameterId(const char *endpoint, const char *soap_action, int _in0, int _in1, std::string &_GetTlkpActionParametersRecordByParameterIdReturn)
{
	struct ns1__GetTlkpActionParametersRecordByParameterId soap_tmp_ns1__GetTlkpActionParametersRecordByParameterId;
	struct ns1__GetTlkpActionParametersRecordByParameterIdResponse *soap_tmp_ns1__GetTlkpActionParametersRecordByParameterIdResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetTlkpActionParametersRecordByParameterId._in0 = _in0;
	soap_tmp_ns1__GetTlkpActionParametersRecordByParameterId._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpActionParametersRecordByParameterId(soap, &soap_tmp_ns1__GetTlkpActionParametersRecordByParameterId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpActionParametersRecordByParameterId(soap, &soap_tmp_ns1__GetTlkpActionParametersRecordByParameterId, "ns1:GetTlkpActionParametersRecordByParameterId", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpActionParametersRecordByParameterId(soap, &soap_tmp_ns1__GetTlkpActionParametersRecordByParameterId, "ns1:GetTlkpActionParametersRecordByParameterId", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetTlkpActionParametersRecordByParameterIdReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetTlkpActionParametersRecordByParameterIdReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpActionParametersRecordByParameterIdResponse = soap_get_ns1__GetTlkpActionParametersRecordByParameterIdResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpActionParametersRecordByParameterIdResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetTlkpActionParametersRecordByParameterIdReturn = soap_tmp_ns1__GetTlkpActionParametersRecordByParameterIdResponse->_GetTlkpActionParametersRecordByParameterIdReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpActionParametersRecord(const char *endpoint, const char *soap_action, int _in0, std::string &_GetTlkpActionParametersRecordReturn)
{
	struct ns1__GetTlkpActionParametersRecord soap_tmp_ns1__GetTlkpActionParametersRecord;
	struct ns1__GetTlkpActionParametersRecordResponse *soap_tmp_ns1__GetTlkpActionParametersRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetTlkpActionParametersRecord._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpActionParametersRecord(soap, &soap_tmp_ns1__GetTlkpActionParametersRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpActionParametersRecord(soap, &soap_tmp_ns1__GetTlkpActionParametersRecord, "ns1:GetTlkpActionParametersRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpActionParametersRecord(soap, &soap_tmp_ns1__GetTlkpActionParametersRecord, "ns1:GetTlkpActionParametersRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetTlkpActionParametersRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetTlkpActionParametersRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpActionParametersRecordResponse = soap_get_ns1__GetTlkpActionParametersRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpActionParametersRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetTlkpActionParametersRecordReturn = soap_tmp_ns1__GetTlkpActionParametersRecordResponse->_GetTlkpActionParametersRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpPriorityLevelRecordByPriorityLevel(const char *endpoint, const char *soap_action, int _in0, std::string &_GetTlkpPriorityLevelRecordByPriorityLevelReturn)
{
	struct ns1__GetTlkpPriorityLevelRecordByPriorityLevel soap_tmp_ns1__GetTlkpPriorityLevelRecordByPriorityLevel;
	struct ns1__GetTlkpPriorityLevelRecordByPriorityLevelResponse *soap_tmp_ns1__GetTlkpPriorityLevelRecordByPriorityLevelResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetTlkpPriorityLevelRecordByPriorityLevel._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpPriorityLevelRecordByPriorityLevel(soap, &soap_tmp_ns1__GetTlkpPriorityLevelRecordByPriorityLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpPriorityLevelRecordByPriorityLevel(soap, &soap_tmp_ns1__GetTlkpPriorityLevelRecordByPriorityLevel, "ns1:GetTlkpPriorityLevelRecordByPriorityLevel", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpPriorityLevelRecordByPriorityLevel(soap, &soap_tmp_ns1__GetTlkpPriorityLevelRecordByPriorityLevel, "ns1:GetTlkpPriorityLevelRecordByPriorityLevel", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetTlkpPriorityLevelRecordByPriorityLevelReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetTlkpPriorityLevelRecordByPriorityLevelReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpPriorityLevelRecordByPriorityLevelResponse = soap_get_ns1__GetTlkpPriorityLevelRecordByPriorityLevelResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpPriorityLevelRecordByPriorityLevelResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetTlkpPriorityLevelRecordByPriorityLevelReturn = soap_tmp_ns1__GetTlkpPriorityLevelRecordByPriorityLevelResponse->_GetTlkpPriorityLevelRecordByPriorityLevelReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpPriorityLevelRecord(const char *endpoint, const char *soap_action, std::string &GetTlkpPriorityLevelRecordReturn)
{
	struct ns1__GetTlkpPriorityLevelRecord soap_tmp_ns1__GetTlkpPriorityLevelRecord;
	struct ns1__GetTlkpPriorityLevelRecordResponse *soap_tmp_ns1__GetTlkpPriorityLevelRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpPriorityLevelRecord(soap, &soap_tmp_ns1__GetTlkpPriorityLevelRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpPriorityLevelRecord(soap, &soap_tmp_ns1__GetTlkpPriorityLevelRecord, "ns1:GetTlkpPriorityLevelRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpPriorityLevelRecord(soap, &soap_tmp_ns1__GetTlkpPriorityLevelRecord, "ns1:GetTlkpPriorityLevelRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetTlkpPriorityLevelRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetTlkpPriorityLevelRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpPriorityLevelRecordResponse = soap_get_ns1__GetTlkpPriorityLevelRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpPriorityLevelRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetTlkpPriorityLevelRecordReturn = soap_tmp_ns1__GetTlkpPriorityLevelRecordResponse->GetTlkpPriorityLevelRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpActionsRecordByAction(const char *endpoint, const char *soap_action, int _in0, std::string &_GetTlkpActionsRecordByActionReturn)
{
	struct ns1__GetTlkpActionsRecordByAction soap_tmp_ns1__GetTlkpActionsRecordByAction;
	struct ns1__GetTlkpActionsRecordByActionResponse *soap_tmp_ns1__GetTlkpActionsRecordByActionResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetTlkpActionsRecordByAction._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpActionsRecordByAction(soap, &soap_tmp_ns1__GetTlkpActionsRecordByAction);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpActionsRecordByAction(soap, &soap_tmp_ns1__GetTlkpActionsRecordByAction, "ns1:GetTlkpActionsRecordByAction", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpActionsRecordByAction(soap, &soap_tmp_ns1__GetTlkpActionsRecordByAction, "ns1:GetTlkpActionsRecordByAction", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetTlkpActionsRecordByActionReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetTlkpActionsRecordByActionReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpActionsRecordByActionResponse = soap_get_ns1__GetTlkpActionsRecordByActionResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpActionsRecordByActionResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetTlkpActionsRecordByActionReturn = soap_tmp_ns1__GetTlkpActionsRecordByActionResponse->_GetTlkpActionsRecordByActionReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpActionsRecord(const char *endpoint, const char *soap_action, std::string &GetTlkpActionsRecordReturn)
{
	struct ns1__GetTlkpActionsRecord soap_tmp_ns1__GetTlkpActionsRecord;
	struct ns1__GetTlkpActionsRecordResponse *soap_tmp_ns1__GetTlkpActionsRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpActionsRecord(soap, &soap_tmp_ns1__GetTlkpActionsRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpActionsRecord(soap, &soap_tmp_ns1__GetTlkpActionsRecord, "ns1:GetTlkpActionsRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpActionsRecord(soap, &soap_tmp_ns1__GetTlkpActionsRecord, "ns1:GetTlkpActionsRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetTlkpActionsRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetTlkpActionsRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpActionsRecordResponse = soap_get_ns1__GetTlkpActionsRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpActionsRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetTlkpActionsRecordReturn = soap_tmp_ns1__GetTlkpActionsRecordResponse->GetTlkpActionsRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpDocumentFieldTypesRecord(const char *endpoint, const char *soap_action, int _in0, std::string &_GetTlkpDocumentFieldTypesRecordReturn)
{
	struct ns1__GetTlkpDocumentFieldTypesRecord soap_tmp_ns1__GetTlkpDocumentFieldTypesRecord;
	struct ns1__GetTlkpDocumentFieldTypesRecordResponse *soap_tmp_ns1__GetTlkpDocumentFieldTypesRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetTlkpDocumentFieldTypesRecord._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpDocumentFieldTypesRecord(soap, &soap_tmp_ns1__GetTlkpDocumentFieldTypesRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpDocumentFieldTypesRecord(soap, &soap_tmp_ns1__GetTlkpDocumentFieldTypesRecord, "ns1:GetTlkpDocumentFieldTypesRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpDocumentFieldTypesRecord(soap, &soap_tmp_ns1__GetTlkpDocumentFieldTypesRecord, "ns1:GetTlkpDocumentFieldTypesRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetTlkpDocumentFieldTypesRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetTlkpDocumentFieldTypesRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpDocumentFieldTypesRecordResponse = soap_get_ns1__GetTlkpDocumentFieldTypesRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpDocumentFieldTypesRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetTlkpDocumentFieldTypesRecordReturn = soap_tmp_ns1__GetTlkpDocumentFieldTypesRecordResponse->_GetTlkpDocumentFieldTypesRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpDocumentFieldsRecord(const char *endpoint, const char *soap_action, int _in0, std::string &_GetTlkpDocumentFieldsRecordReturn)
{
	struct ns1__GetTlkpDocumentFieldsRecord soap_tmp_ns1__GetTlkpDocumentFieldsRecord;
	struct ns1__GetTlkpDocumentFieldsRecordResponse *soap_tmp_ns1__GetTlkpDocumentFieldsRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetTlkpDocumentFieldsRecord._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpDocumentFieldsRecord(soap, &soap_tmp_ns1__GetTlkpDocumentFieldsRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpDocumentFieldsRecord(soap, &soap_tmp_ns1__GetTlkpDocumentFieldsRecord, "ns1:GetTlkpDocumentFieldsRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpDocumentFieldsRecord(soap, &soap_tmp_ns1__GetTlkpDocumentFieldsRecord, "ns1:GetTlkpDocumentFieldsRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetTlkpDocumentFieldsRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetTlkpDocumentFieldsRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpDocumentFieldsRecordResponse = soap_get_ns1__GetTlkpDocumentFieldsRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpDocumentFieldsRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetTlkpDocumentFieldsRecordReturn = soap_tmp_ns1__GetTlkpDocumentFieldsRecordResponse->_GetTlkpDocumentFieldsRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpDocumentTypesRecordByClientType(const char *endpoint, const char *soap_action, int _in0, std::string &_GetTlkpDocumentTypesRecordByClientTypeReturn)
{
	struct ns1__GetTlkpDocumentTypesRecordByClientType soap_tmp_ns1__GetTlkpDocumentTypesRecordByClientType;
	struct ns1__GetTlkpDocumentTypesRecordByClientTypeResponse *soap_tmp_ns1__GetTlkpDocumentTypesRecordByClientTypeResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetTlkpDocumentTypesRecordByClientType._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpDocumentTypesRecordByClientType(soap, &soap_tmp_ns1__GetTlkpDocumentTypesRecordByClientType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpDocumentTypesRecordByClientType(soap, &soap_tmp_ns1__GetTlkpDocumentTypesRecordByClientType, "ns1:GetTlkpDocumentTypesRecordByClientType", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpDocumentTypesRecordByClientType(soap, &soap_tmp_ns1__GetTlkpDocumentTypesRecordByClientType, "ns1:GetTlkpDocumentTypesRecordByClientType", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetTlkpDocumentTypesRecordByClientTypeReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetTlkpDocumentTypesRecordByClientTypeReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpDocumentTypesRecordByClientTypeResponse = soap_get_ns1__GetTlkpDocumentTypesRecordByClientTypeResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpDocumentTypesRecordByClientTypeResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetTlkpDocumentTypesRecordByClientTypeReturn = soap_tmp_ns1__GetTlkpDocumentTypesRecordByClientTypeResponse->_GetTlkpDocumentTypesRecordByClientTypeReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetTlkpDocumentTypesRecord(const char *endpoint, const char *soap_action, std::string &GetTlkpDocumentTypesRecordReturn)
{
	struct ns1__GetTlkpDocumentTypesRecord soap_tmp_ns1__GetTlkpDocumentTypesRecord;
	struct ns1__GetTlkpDocumentTypesRecordResponse *soap_tmp_ns1__GetTlkpDocumentTypesRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetTlkpDocumentTypesRecord(soap, &soap_tmp_ns1__GetTlkpDocumentTypesRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetTlkpDocumentTypesRecord(soap, &soap_tmp_ns1__GetTlkpDocumentTypesRecord, "ns1:GetTlkpDocumentTypesRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetTlkpDocumentTypesRecord(soap, &soap_tmp_ns1__GetTlkpDocumentTypesRecord, "ns1:GetTlkpDocumentTypesRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetTlkpDocumentTypesRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetTlkpDocumentTypesRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetTlkpDocumentTypesRecordResponse = soap_get_ns1__GetTlkpDocumentTypesRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetTlkpDocumentTypesRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetTlkpDocumentTypesRecordReturn = soap_tmp_ns1__GetTlkpDocumentTypesRecordResponse->GetTlkpDocumentTypesRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetAlertActionFieldsRecord(const char *endpoint, const char *soap_action, int _in0, std::string &_GetAlertActionFieldsRecordReturn)
{
	struct ns1__GetAlertActionFieldsRecord soap_tmp_ns1__GetAlertActionFieldsRecord;
	struct ns1__GetAlertActionFieldsRecordResponse *soap_tmp_ns1__GetAlertActionFieldsRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetAlertActionFieldsRecord._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetAlertActionFieldsRecord(soap, &soap_tmp_ns1__GetAlertActionFieldsRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetAlertActionFieldsRecord(soap, &soap_tmp_ns1__GetAlertActionFieldsRecord, "ns1:GetAlertActionFieldsRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetAlertActionFieldsRecord(soap, &soap_tmp_ns1__GetAlertActionFieldsRecord, "ns1:GetAlertActionFieldsRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetAlertActionFieldsRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetAlertActionFieldsRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetAlertActionFieldsRecordResponse = soap_get_ns1__GetAlertActionFieldsRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetAlertActionFieldsRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetAlertActionFieldsRecordReturn = soap_tmp_ns1__GetAlertActionFieldsRecordResponse->_GetAlertActionFieldsRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetAlertActionParameterRecord(const char *endpoint, const char *soap_action, int _in0, std::string &_GetAlertActionParameterRecordReturn)
{
	struct ns1__GetAlertActionParameterRecord soap_tmp_ns1__GetAlertActionParameterRecord;
	struct ns1__GetAlertActionParameterRecordResponse *soap_tmp_ns1__GetAlertActionParameterRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetAlertActionParameterRecord._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetAlertActionParameterRecord(soap, &soap_tmp_ns1__GetAlertActionParameterRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetAlertActionParameterRecord(soap, &soap_tmp_ns1__GetAlertActionParameterRecord, "ns1:GetAlertActionParameterRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetAlertActionParameterRecord(soap, &soap_tmp_ns1__GetAlertActionParameterRecord, "ns1:GetAlertActionParameterRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetAlertActionParameterRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetAlertActionParameterRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetAlertActionParameterRecordResponse = soap_get_ns1__GetAlertActionParameterRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetAlertActionParameterRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetAlertActionParameterRecordReturn = soap_tmp_ns1__GetAlertActionParameterRecordResponse->_GetAlertActionParameterRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetAlertSchedulesRecord(const char *endpoint, const char *soap_action, int _in0, std::string &_GetAlertSchedulesRecordReturn)
{
	struct ns1__GetAlertSchedulesRecord soap_tmp_ns1__GetAlertSchedulesRecord;
	struct ns1__GetAlertSchedulesRecordResponse *soap_tmp_ns1__GetAlertSchedulesRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetAlertSchedulesRecord._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetAlertSchedulesRecord(soap, &soap_tmp_ns1__GetAlertSchedulesRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetAlertSchedulesRecord(soap, &soap_tmp_ns1__GetAlertSchedulesRecord, "ns1:GetAlertSchedulesRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetAlertSchedulesRecord(soap, &soap_tmp_ns1__GetAlertSchedulesRecord, "ns1:GetAlertSchedulesRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetAlertSchedulesRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetAlertSchedulesRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetAlertSchedulesRecordResponse = soap_get_ns1__GetAlertSchedulesRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetAlertSchedulesRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetAlertSchedulesRecordReturn = soap_tmp_ns1__GetAlertSchedulesRecordResponse->_GetAlertSchedulesRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetAlertActionsRecord(const char *endpoint, const char *soap_action, int _in0, std::string &_GetAlertActionsRecordReturn)
{
	struct ns1__GetAlertActionsRecord soap_tmp_ns1__GetAlertActionsRecord;
	struct ns1__GetAlertActionsRecordResponse *soap_tmp_ns1__GetAlertActionsRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetAlertActionsRecord._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetAlertActionsRecord(soap, &soap_tmp_ns1__GetAlertActionsRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetAlertActionsRecord(soap, &soap_tmp_ns1__GetAlertActionsRecord, "ns1:GetAlertActionsRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetAlertActionsRecord(soap, &soap_tmp_ns1__GetAlertActionsRecord, "ns1:GetAlertActionsRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetAlertActionsRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetAlertActionsRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetAlertActionsRecordResponse = soap_get_ns1__GetAlertActionsRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetAlertActionsRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetAlertActionsRecordReturn = soap_tmp_ns1__GetAlertActionsRecordResponse->_GetAlertActionsRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetAlertEvaluationsRecord(const char *endpoint, const char *soap_action, int _in0, std::string &_GetAlertEvaluationsRecordReturn)
{
	struct ns1__GetAlertEvaluationsRecord soap_tmp_ns1__GetAlertEvaluationsRecord;
	struct ns1__GetAlertEvaluationsRecordResponse *soap_tmp_ns1__GetAlertEvaluationsRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetAlertEvaluationsRecord._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetAlertEvaluationsRecord(soap, &soap_tmp_ns1__GetAlertEvaluationsRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetAlertEvaluationsRecord(soap, &soap_tmp_ns1__GetAlertEvaluationsRecord, "ns1:GetAlertEvaluationsRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetAlertEvaluationsRecord(soap, &soap_tmp_ns1__GetAlertEvaluationsRecord, "ns1:GetAlertEvaluationsRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetAlertEvaluationsRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetAlertEvaluationsRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetAlertEvaluationsRecordResponse = soap_get_ns1__GetAlertEvaluationsRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetAlertEvaluationsRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetAlertEvaluationsRecordReturn = soap_tmp_ns1__GetAlertEvaluationsRecordResponse->_GetAlertEvaluationsRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetAlertsRecordByDocumentType(const char *endpoint, const char *soap_action, int _in0, std::string &_GetAlertsRecordByDocumentTypeReturn)
{
	struct ns1__GetAlertsRecordByDocumentType soap_tmp_ns1__GetAlertsRecordByDocumentType;
	struct ns1__GetAlertsRecordByDocumentTypeResponse *soap_tmp_ns1__GetAlertsRecordByDocumentTypeResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__GetAlertsRecordByDocumentType._in0 = _in0;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetAlertsRecordByDocumentType(soap, &soap_tmp_ns1__GetAlertsRecordByDocumentType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetAlertsRecordByDocumentType(soap, &soap_tmp_ns1__GetAlertsRecordByDocumentType, "ns1:GetAlertsRecordByDocumentType", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetAlertsRecordByDocumentType(soap, &soap_tmp_ns1__GetAlertsRecordByDocumentType, "ns1:GetAlertsRecordByDocumentType", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&_GetAlertsRecordByDocumentTypeReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &_GetAlertsRecordByDocumentTypeReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetAlertsRecordByDocumentTypeResponse = soap_get_ns1__GetAlertsRecordByDocumentTypeResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetAlertsRecordByDocumentTypeResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_GetAlertsRecordByDocumentTypeReturn = soap_tmp_ns1__GetAlertsRecordByDocumentTypeResponse->_GetAlertsRecordByDocumentTypeReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetAlertsRecord(const char *endpoint, const char *soap_action, std::string &GetAlertsRecordReturn)
{
	struct ns1__GetAlertsRecord soap_tmp_ns1__GetAlertsRecord;
	struct ns1__GetAlertsRecordResponse *soap_tmp_ns1__GetAlertsRecordResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetAlertsRecord(soap, &soap_tmp_ns1__GetAlertsRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetAlertsRecord(soap, &soap_tmp_ns1__GetAlertsRecord, "ns1:GetAlertsRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetAlertsRecord(soap, &soap_tmp_ns1__GetAlertsRecord, "ns1:GetAlertsRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetAlertsRecordReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetAlertsRecordReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetAlertsRecordResponse = soap_get_ns1__GetAlertsRecordResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetAlertsRecordResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetAlertsRecordReturn = soap_tmp_ns1__GetAlertsRecordResponse->GetAlertsRecordReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::UpdateAlertActionField(const char *endpoint, const char *soap_action, int _in0, int _in1, struct ns1__UpdateAlertActionFieldResponse &_param_1)
{
	struct ns1__UpdateAlertActionField soap_tmp_ns1__UpdateAlertActionField;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__UpdateAlertActionField._in0 = _in0;
	soap_tmp_ns1__UpdateAlertActionField._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__UpdateAlertActionField(soap, &soap_tmp_ns1__UpdateAlertActionField);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__UpdateAlertActionField(soap, &soap_tmp_ns1__UpdateAlertActionField, "ns1:UpdateAlertActionField", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__UpdateAlertActionField(soap, &soap_tmp_ns1__UpdateAlertActionField, "ns1:UpdateAlertActionField", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__UpdateAlertActionFieldResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__UpdateAlertActionFieldResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__UpdateAlertActionFieldResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::InsertAlertActionField(const char *endpoint, const char *soap_action, int _in0, int _in1, struct ns1__InsertAlertActionFieldResponse &_param_1)
{
	struct ns1__InsertAlertActionField soap_tmp_ns1__InsertAlertActionField;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__InsertAlertActionField._in0 = _in0;
	soap_tmp_ns1__InsertAlertActionField._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__InsertAlertActionField(soap, &soap_tmp_ns1__InsertAlertActionField);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__InsertAlertActionField(soap, &soap_tmp_ns1__InsertAlertActionField, "ns1:InsertAlertActionField", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__InsertAlertActionField(soap, &soap_tmp_ns1__InsertAlertActionField, "ns1:InsertAlertActionField", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__InsertAlertActionFieldResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__InsertAlertActionFieldResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__InsertAlertActionFieldResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::UpdateAlertActionParameter(const char *endpoint, const char *soap_action, int _in0, int _in1, const std::string& _in2, struct ns1__UpdateAlertActionParameterResponse &_param_1)
{
	struct ns1__UpdateAlertActionParameter soap_tmp_ns1__UpdateAlertActionParameter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__UpdateAlertActionParameter._in0 = _in0;
	soap_tmp_ns1__UpdateAlertActionParameter._in1 = _in1;
	soap_tmp_ns1__UpdateAlertActionParameter._in2 = _in2;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__UpdateAlertActionParameter(soap, &soap_tmp_ns1__UpdateAlertActionParameter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__UpdateAlertActionParameter(soap, &soap_tmp_ns1__UpdateAlertActionParameter, "ns1:UpdateAlertActionParameter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__UpdateAlertActionParameter(soap, &soap_tmp_ns1__UpdateAlertActionParameter, "ns1:UpdateAlertActionParameter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__UpdateAlertActionParameterResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__UpdateAlertActionParameterResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__UpdateAlertActionParameterResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::InsertAlertActionParameter(const char *endpoint, const char *soap_action, int _in0, int _in1, const std::string& _in2, struct ns1__InsertAlertActionParameterResponse &_param_1)
{
	struct ns1__InsertAlertActionParameter soap_tmp_ns1__InsertAlertActionParameter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__InsertAlertActionParameter._in0 = _in0;
	soap_tmp_ns1__InsertAlertActionParameter._in1 = _in1;
	soap_tmp_ns1__InsertAlertActionParameter._in2 = _in2;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__InsertAlertActionParameter(soap, &soap_tmp_ns1__InsertAlertActionParameter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__InsertAlertActionParameter(soap, &soap_tmp_ns1__InsertAlertActionParameter, "ns1:InsertAlertActionParameter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__InsertAlertActionParameter(soap, &soap_tmp_ns1__InsertAlertActionParameter, "ns1:InsertAlertActionParameter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__InsertAlertActionParameterResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__InsertAlertActionParameterResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__InsertAlertActionParameterResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::UpdateAlertSchedule(const char *endpoint, const char *soap_action, int _in0, const std::string& _in1, const std::string& _in2, const std::string& _in3, const std::string& _in4, const std::string& _in5, struct ns1__UpdateAlertScheduleResponse &_param_1)
{
	struct ns1__UpdateAlertSchedule soap_tmp_ns1__UpdateAlertSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__UpdateAlertSchedule._in0 = _in0;
	soap_tmp_ns1__UpdateAlertSchedule._in1 = _in1;
	soap_tmp_ns1__UpdateAlertSchedule._in2 = _in2;
	soap_tmp_ns1__UpdateAlertSchedule._in3 = _in3;
	soap_tmp_ns1__UpdateAlertSchedule._in4 = _in4;
	soap_tmp_ns1__UpdateAlertSchedule._in5 = _in5;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__UpdateAlertSchedule(soap, &soap_tmp_ns1__UpdateAlertSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__UpdateAlertSchedule(soap, &soap_tmp_ns1__UpdateAlertSchedule, "ns1:UpdateAlertSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__UpdateAlertSchedule(soap, &soap_tmp_ns1__UpdateAlertSchedule, "ns1:UpdateAlertSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__UpdateAlertScheduleResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__UpdateAlertScheduleResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__UpdateAlertScheduleResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::InsertAlertSchedule(const char *endpoint, const char *soap_action, int _in0, const std::string& _in1, const std::string& _in2, const std::string& _in3, const std::string& _in4, const std::string& _in5, int &_InsertAlertScheduleReturn)
{
	struct ns1__InsertAlertSchedule soap_tmp_ns1__InsertAlertSchedule;
	struct ns1__InsertAlertScheduleResponse *soap_tmp_ns1__InsertAlertScheduleResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__InsertAlertSchedule._in0 = _in0;
	soap_tmp_ns1__InsertAlertSchedule._in1 = _in1;
	soap_tmp_ns1__InsertAlertSchedule._in2 = _in2;
	soap_tmp_ns1__InsertAlertSchedule._in3 = _in3;
	soap_tmp_ns1__InsertAlertSchedule._in4 = _in4;
	soap_tmp_ns1__InsertAlertSchedule._in5 = _in5;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__InsertAlertSchedule(soap, &soap_tmp_ns1__InsertAlertSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__InsertAlertSchedule(soap, &soap_tmp_ns1__InsertAlertSchedule, "ns1:InsertAlertSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__InsertAlertSchedule(soap, &soap_tmp_ns1__InsertAlertSchedule, "ns1:InsertAlertSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<int*>(&_InsertAlertScheduleReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_int(soap, &_InsertAlertScheduleReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__InsertAlertScheduleResponse = soap_get_ns1__InsertAlertScheduleResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__InsertAlertScheduleResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_InsertAlertScheduleReturn = soap_tmp_ns1__InsertAlertScheduleResponse->_InsertAlertScheduleReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::UpdateAlertAction(const char *endpoint, const char *soap_action, int _in0, int _in1, struct ns1__UpdateAlertActionResponse &_param_1)
{
	struct ns1__UpdateAlertAction soap_tmp_ns1__UpdateAlertAction;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__UpdateAlertAction._in0 = _in0;
	soap_tmp_ns1__UpdateAlertAction._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__UpdateAlertAction(soap, &soap_tmp_ns1__UpdateAlertAction);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__UpdateAlertAction(soap, &soap_tmp_ns1__UpdateAlertAction, "ns1:UpdateAlertAction", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__UpdateAlertAction(soap, &soap_tmp_ns1__UpdateAlertAction, "ns1:UpdateAlertAction", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__UpdateAlertActionResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__UpdateAlertActionResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__UpdateAlertActionResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::InsertAlertAction(const char *endpoint, const char *soap_action, int _in0, int _in1, int _in2, int &_InsertAlertActionReturn)
{
	struct ns1__InsertAlertAction soap_tmp_ns1__InsertAlertAction;
	struct ns1__InsertAlertActionResponse *soap_tmp_ns1__InsertAlertActionResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__InsertAlertAction._in0 = _in0;
	soap_tmp_ns1__InsertAlertAction._in1 = _in1;
	soap_tmp_ns1__InsertAlertAction._in2 = _in2;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__InsertAlertAction(soap, &soap_tmp_ns1__InsertAlertAction);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__InsertAlertAction(soap, &soap_tmp_ns1__InsertAlertAction, "ns1:InsertAlertAction", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__InsertAlertAction(soap, &soap_tmp_ns1__InsertAlertAction, "ns1:InsertAlertAction", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<int*>(&_InsertAlertActionReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_int(soap, &_InsertAlertActionReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__InsertAlertActionResponse = soap_get_ns1__InsertAlertActionResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__InsertAlertActionResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_InsertAlertActionReturn = soap_tmp_ns1__InsertAlertActionResponse->_InsertAlertActionReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::UpdatetAlertEvaluation(const char *endpoint, const char *soap_action, int _in0, const std::string& _in1, struct ns1__UpdatetAlertEvaluationResponse &_param_1)
{
	struct ns1__UpdatetAlertEvaluation soap_tmp_ns1__UpdatetAlertEvaluation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__UpdatetAlertEvaluation._in0 = _in0;
	soap_tmp_ns1__UpdatetAlertEvaluation._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__UpdatetAlertEvaluation(soap, &soap_tmp_ns1__UpdatetAlertEvaluation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__UpdatetAlertEvaluation(soap, &soap_tmp_ns1__UpdatetAlertEvaluation, "ns1:UpdatetAlertEvaluation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__UpdatetAlertEvaluation(soap, &soap_tmp_ns1__UpdatetAlertEvaluation, "ns1:UpdatetAlertEvaluation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__UpdatetAlertEvaluationResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__UpdatetAlertEvaluationResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__UpdatetAlertEvaluationResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::InsertAlertEvaluation(const char *endpoint, const char *soap_action, int _in0, const std::string& _in1, int &_InsertAlertEvaluationReturn)
{
	struct ns1__InsertAlertEvaluation soap_tmp_ns1__InsertAlertEvaluation;
	struct ns1__InsertAlertEvaluationResponse *soap_tmp_ns1__InsertAlertEvaluationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__InsertAlertEvaluation._in0 = _in0;
	soap_tmp_ns1__InsertAlertEvaluation._in1 = _in1;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__InsertAlertEvaluation(soap, &soap_tmp_ns1__InsertAlertEvaluation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__InsertAlertEvaluation(soap, &soap_tmp_ns1__InsertAlertEvaluation, "ns1:InsertAlertEvaluation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__InsertAlertEvaluation(soap, &soap_tmp_ns1__InsertAlertEvaluation, "ns1:InsertAlertEvaluation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<int*>(&_InsertAlertEvaluationReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_int(soap, &_InsertAlertEvaluationReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__InsertAlertEvaluationResponse = soap_get_ns1__InsertAlertEvaluationResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__InsertAlertEvaluationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_InsertAlertEvaluationReturn = soap_tmp_ns1__InsertAlertEvaluationResponse->_InsertAlertEvaluationReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::UpdateAlert(const char *endpoint, const char *soap_action, int _in0, const std::string& _in1, const std::string& _in2, int _in3, int _in4, struct ns1__UpdateAlertResponse &_param_1)
{
	struct ns1__UpdateAlert soap_tmp_ns1__UpdateAlert;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__UpdateAlert._in0 = _in0;
	soap_tmp_ns1__UpdateAlert._in1 = _in1;
	soap_tmp_ns1__UpdateAlert._in2 = _in2;
	soap_tmp_ns1__UpdateAlert._in3 = _in3;
	soap_tmp_ns1__UpdateAlert._in4 = _in4;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__UpdateAlert(soap, &soap_tmp_ns1__UpdateAlert);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__UpdateAlert(soap, &soap_tmp_ns1__UpdateAlert, "ns1:UpdateAlert", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__UpdateAlert(soap, &soap_tmp_ns1__UpdateAlert, "ns1:UpdateAlert", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns1__UpdateAlertResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns1__UpdateAlertResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns1__UpdateAlertResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::InsertAlert(const char *endpoint, const char *soap_action, int _in0, const std::string& _in1, const std::string& _in2, int _in3, const std::string& _in4, int _in5, int &_InsertAlertReturn)
{
	struct ns1__InsertAlert soap_tmp_ns1__InsertAlert;
	struct ns1__InsertAlertResponse *soap_tmp_ns1__InsertAlertResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp_ns1__InsertAlert._in0 = _in0;
	soap_tmp_ns1__InsertAlert._in1 = _in1;
	soap_tmp_ns1__InsertAlert._in2 = _in2;
	soap_tmp_ns1__InsertAlert._in3 = _in3;
	soap_tmp_ns1__InsertAlert._in4 = _in4;
	soap_tmp_ns1__InsertAlert._in5 = _in5;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__InsertAlert(soap, &soap_tmp_ns1__InsertAlert);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__InsertAlert(soap, &soap_tmp_ns1__InsertAlert, "ns1:InsertAlert", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__InsertAlert(soap, &soap_tmp_ns1__InsertAlert, "ns1:InsertAlert", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<int*>(&_InsertAlertReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_int(soap, &_InsertAlertReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__InsertAlertResponse = soap_get_ns1__InsertAlertResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__InsertAlertResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_InsertAlertReturn = soap_tmp_ns1__InsertAlertResponse->_InsertAlertReturn;
	return soap_closesock(soap);
}

int AlertWebServiceSoapBindingProxy::GetWebServiceName(const char *endpoint, const char *soap_action, std::string &GetWebServiceNameReturn)
{
	struct ns1__GetWebServiceName soap_tmp_ns1__GetWebServiceName;
	struct ns1__GetWebServiceNameResponse *soap_tmp_ns1__GetWebServiceNameResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.156.104:8180/AlertWebService/services/AlertWebService";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns1__GetWebServiceName(soap, &soap_tmp_ns1__GetWebServiceName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetWebServiceName(soap, &soap_tmp_ns1__GetWebServiceName, "ns1:GetWebServiceName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetWebServiceName(soap, &soap_tmp_ns1__GetWebServiceName, "ns1:GetWebServiceName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<std::string*>(&GetWebServiceNameReturn)) // NULL ref?
		return soap_closesock(soap);
	soap_default_SOAP_ENC__string(soap, &GetWebServiceNameReturn);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetWebServiceNameResponse = soap_get_ns1__GetWebServiceNameResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns1__GetWebServiceNameResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	GetWebServiceNameReturn = soap_tmp_ns1__GetWebServiceNameResponse->GetWebServiceNameReturn;
	return soap_closesock(soap);
}
/* End of client proxy code */
